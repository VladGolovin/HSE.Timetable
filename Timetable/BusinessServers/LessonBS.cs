//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HSE.Timetable
{
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.LINQProvider;
    using System;
    using System.Linq;
    using System.Xml;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// LessonBS.
    /// </summary>
    // *** Start programmer edit section *** (LessonBS CustomAttributes)

    // *** End programmer edit section *** (LessonBS CustomAttributes)
    [ICSSoft.STORMNET.AccessType(ICSSoft.STORMNET.AccessType.none)]
    public class LessonBS : ICSSoft.STORMNET.Business.BusinessServer
    {
        
        // *** Start programmer edit section *** (LessonBS CustomMembers)

        // *** End programmer edit section *** (LessonBS CustomMembers)

        
        // *** Start programmer edit section *** (OnUpdateLesson CustomAttributes)

        // *** End programmer edit section *** (OnUpdateLesson CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateLesson(HSE.Timetable.Lesson UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateLesson)
            var коллизия = DataService.Query<Lesson>(Lesson.Views.LessonL)
                .Where(lesson =>
                    (lesson.Date.Date.Equals(UpdatedObject.Date.Date)
                    && (lesson.Beginning > UpdatedObject.Beginning && lesson.Ending < UpdatedObject.Beginning)
                    || (lesson.Beginning > UpdatedObject.Ending && lesson.Ending < UpdatedObject.Ending))
                    && (lesson.Room == UpdatedObject.Room || lesson.StudentGroup == UpdatedObject.StudentGroup))
                .FirstOrDefault();

            if (коллизия != null)
            {
                throw new Exception($"Обнаружена коллизия, в это время уже проводится занятие c {коллизия.Beginning:00.00} до {коллизия.Ending:00.00} для группы {коллизия.StudentGroup.Name} в аудитории {коллизия.Room.Number}");
            }

            return new DataObject[0];
            // *** End programmer edit section *** (OnUpdateLesson)
        }
    }
}
