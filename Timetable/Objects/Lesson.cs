//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HSE.Timetable
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Lesson.
    /// </summary>
    // *** Start programmer edit section *** (Lesson CustomAttributes)

    // *** End programmer edit section *** (Lesson CustomAttributes)
    [PublishName("Lesson")]
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "Beginning as \'Beginning\'",
            "Ending as \'Ending\'",
            "Date as \'Date\'",
            "Discipline as \'Discipline\'",
            "Discipline.Name as \'Name\'",
            "Room as \'Room\'",
            "Room.Number as \'Number\'"})]
    [View("LessonE", new string[] {
            "Beginning as \'Начало\'",
            "Ending as \'Окончание\'",
            "Date as \'Дата проведения\'",
            "StudentGroup as \'Группа\'",
            "StudentGroup.Name",
            "Discipline as \'Дисциплина\'",
            "Discipline.Name as \'Name\'",
            "Room as \'Аудитория\'",
            "Room.Number as \'Number\'"}, Hidden=new string[] {
            "StudentGroup.Name",
            "Discipline.Name",
            "Room.Number"})]
    [MasterViewDefineAttribute("LessonE", "StudentGroup", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Name")]
    [MasterViewDefineAttribute("LessonE", "Discipline", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Name")]
    [MasterViewDefineAttribute("LessonE", "Room", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Number")]
    [View("LessonL", new string[] {
            "Beginning as \'Начало\'",
            "Ending as \'Окончание\'",
            "Date as \'Дата проведения\'",
            "StudentGroup.Name as \'Группа\'",
            "Discipline.Name as \'Дисциплина\'",
            "Room.Number as \'Аудитория\'"})]
    [BusinessServer("HSE.Timetable.LessonBS, Timetable.BusinessServers", ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnAllEvents)]
    public class Lesson : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private double fBeginning;
        
        private double fEnding;
        
        private System.DateTime fDate;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private HSE.Timetable.StudentGroup fStudentGroup;
        
        private HSE.Timetable.Discipline fDiscipline;
        
        private HSE.Timetable.Room fRoom;
        
        // *** Start programmer edit section *** (Lesson CustomMembers)

        // *** End programmer edit section *** (Lesson CustomMembers)

        
        /// <summary>
        /// Beginning.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.Beginning CustomAttributes)

        // *** End programmer edit section *** (Lesson.Beginning CustomAttributes)
        public virtual double Beginning
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.Beginning Get start)

                // *** End programmer edit section *** (Lesson.Beginning Get start)
                double result = this.fBeginning;
                // *** Start programmer edit section *** (Lesson.Beginning Get end)

                // *** End programmer edit section *** (Lesson.Beginning Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.Beginning Set start)

                // *** End programmer edit section *** (Lesson.Beginning Set start)
                this.fBeginning = value;
                // *** Start programmer edit section *** (Lesson.Beginning Set end)

                // *** End programmer edit section *** (Lesson.Beginning Set end)
            }
        }
        
        /// <summary>
        /// Ending.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.Ending CustomAttributes)

        // *** End programmer edit section *** (Lesson.Ending CustomAttributes)
        public virtual double Ending
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.Ending Get start)

                // *** End programmer edit section *** (Lesson.Ending Get start)
                double result = this.fEnding;
                // *** Start programmer edit section *** (Lesson.Ending Get end)

                // *** End programmer edit section *** (Lesson.Ending Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.Ending Set start)

                // *** End programmer edit section *** (Lesson.Ending Set start)
                this.fEnding = value;
                // *** Start programmer edit section *** (Lesson.Ending Set end)

                // *** End programmer edit section *** (Lesson.Ending Set end)
            }
        }
        
        /// <summary>
        /// Date.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.Date CustomAttributes)

        // *** End programmer edit section *** (Lesson.Date CustomAttributes)
        public virtual System.DateTime Date
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.Date Get start)

                // *** End programmer edit section *** (Lesson.Date Get start)
                System.DateTime result = this.fDate;
                // *** Start programmer edit section *** (Lesson.Date Get end)

                // *** End programmer edit section *** (Lesson.Date Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.Date Set start)

                // *** End programmer edit section *** (Lesson.Date Set start)
                this.fDate = value;
                // *** Start programmer edit section *** (Lesson.Date Set end)

                // *** End programmer edit section *** (Lesson.Date Set end)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.CreateTime CustomAttributes)

        // *** End programmer edit section *** (Lesson.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.CreateTime Get start)

                // *** End programmer edit section *** (Lesson.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (Lesson.CreateTime Get end)

                // *** End programmer edit section *** (Lesson.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.CreateTime Set start)

                // *** End programmer edit section *** (Lesson.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (Lesson.CreateTime Set end)

                // *** End programmer edit section *** (Lesson.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.Creator CustomAttributes)

        // *** End programmer edit section *** (Lesson.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.Creator Get start)

                // *** End programmer edit section *** (Lesson.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (Lesson.Creator Get end)

                // *** End programmer edit section *** (Lesson.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.Creator Set start)

                // *** End programmer edit section *** (Lesson.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (Lesson.Creator Set end)

                // *** End programmer edit section *** (Lesson.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.EditTime CustomAttributes)

        // *** End programmer edit section *** (Lesson.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.EditTime Get start)

                // *** End programmer edit section *** (Lesson.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (Lesson.EditTime Get end)

                // *** End programmer edit section *** (Lesson.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.EditTime Set start)

                // *** End programmer edit section *** (Lesson.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (Lesson.EditTime Set end)

                // *** End programmer edit section *** (Lesson.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.Editor CustomAttributes)

        // *** End programmer edit section *** (Lesson.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.Editor Get start)

                // *** End programmer edit section *** (Lesson.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (Lesson.Editor Get end)

                // *** End programmer edit section *** (Lesson.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.Editor Set start)

                // *** End programmer edit section *** (Lesson.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (Lesson.Editor Set end)

                // *** End programmer edit section *** (Lesson.Editor Set end)
            }
        }
        
        /// <summary>
        /// Lesson.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.StudentGroup CustomAttributes)

        // *** End programmer edit section *** (Lesson.StudentGroup CustomAttributes)
        [PropertyStorage(new string[] {
                "StudentGroup"})]
        [NotNull()]
        public virtual HSE.Timetable.StudentGroup StudentGroup
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.StudentGroup Get start)

                // *** End programmer edit section *** (Lesson.StudentGroup Get start)
                HSE.Timetable.StudentGroup result = this.fStudentGroup;
                // *** Start programmer edit section *** (Lesson.StudentGroup Get end)

                // *** End programmer edit section *** (Lesson.StudentGroup Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.StudentGroup Set start)

                // *** End programmer edit section *** (Lesson.StudentGroup Set start)
                this.fStudentGroup = value;
                // *** Start programmer edit section *** (Lesson.StudentGroup Set end)

                // *** End programmer edit section *** (Lesson.StudentGroup Set end)
            }
        }
        
        /// <summary>
        /// Lesson.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.Discipline CustomAttributes)

        // *** End programmer edit section *** (Lesson.Discipline CustomAttributes)
        [PropertyStorage(new string[] {
                "Discipline"})]
        [NotNull()]
        public virtual HSE.Timetable.Discipline Discipline
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.Discipline Get start)

                // *** End programmer edit section *** (Lesson.Discipline Get start)
                HSE.Timetable.Discipline result = this.fDiscipline;
                // *** Start programmer edit section *** (Lesson.Discipline Get end)

                // *** End programmer edit section *** (Lesson.Discipline Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.Discipline Set start)

                // *** End programmer edit section *** (Lesson.Discipline Set start)
                this.fDiscipline = value;
                // *** Start programmer edit section *** (Lesson.Discipline Set end)

                // *** End programmer edit section *** (Lesson.Discipline Set end)
            }
        }
        
        /// <summary>
        /// Lesson.
        /// </summary>
        // *** Start programmer edit section *** (Lesson.Room CustomAttributes)

        // *** End programmer edit section *** (Lesson.Room CustomAttributes)
        [PropertyStorage(new string[] {
                "Room"})]
        [NotNull()]
        public virtual HSE.Timetable.Room Room
        {
            get
            {
                // *** Start programmer edit section *** (Lesson.Room Get start)

                // *** End programmer edit section *** (Lesson.Room Get start)
                HSE.Timetable.Room result = this.fRoom;
                // *** Start programmer edit section *** (Lesson.Room Get end)

                // *** End programmer edit section *** (Lesson.Room Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Lesson.Room Set start)

                // *** End programmer edit section *** (Lesson.Room Set start)
                this.fRoom = value;
                // *** Start programmer edit section *** (Lesson.Room Set end)

                // *** End programmer edit section *** (Lesson.Room Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(HSE.Timetable.Lesson));
                }
            }
            
            /// <summary>
            /// "LessonE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View LessonE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("LessonE", typeof(HSE.Timetable.Lesson));
                }
            }
            
            /// <summary>
            /// "LessonL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View LessonL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("LessonL", typeof(HSE.Timetable.Lesson));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
